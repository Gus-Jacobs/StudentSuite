# codemagic.yaml
workflows:
  ios-macos-release-build:
    - name: iOS & macOS Release Build
    instance_type: mac_mini_m1 # Use a Mac instance for Apple builds

    # --- Environment Variables ---
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default

      # Environment variables for Firebase and Apple signing
      # You MUST set these in Codemagic UI under Environment variables -> Secure files
      # Example:
      # FLUTTER_APP_FIREBASE_API_KEY:
      # FLUTTER_APP_FIREBASE_APP_ID:
      # FLUTTER_APP_FIREBASE_MESSAGING_SENDER_ID:
      # FLUTTER_APP_FIREBASE_PROJECT_ID:
      # FLUTTER_APP_FIREBASE_STORAGE_BUCKET:

      # IMPORTANT: Your Bundle ID (com.pegumax.studentsuite)
      # This MUST be set as an Environment Variable in Codemagic UI, e.g.,
      # Variable Name: IOS_BUNDLE_ID
      # Variable Value: com.pegumax.studentsuite
      # Variable Group: (optional, but good practice for organization)
      # Make sure the name 'IOS_BUNDLE_ID' matches what's used here.

    # --- Integrations (for automatic code signing and publishing) ---
    # This is where you tell Codemagic which App Store Connect API key to use
    # for this workflow. It references the key you set up in the UI.
    integrations:
      app_store_connect: "Codemagic Integration Key" # <<-- Direct reference to your API key's name

    # --- Triggering Syntax ---
    triggering:
      branch_patterns:
        - pattern: 'main' # Trigger on pushes to the 'main' branch for releases
          include: true

    scripts:
      - name: Set up Flutter
        script: |
          flutter channel $FLUTTER_CHANNEL
          flutter upgrade
          flutter doctor
      - name: Get dependencies
        script: flutter pub get

      # Install CocoaPods dependencies for iOS
      - name: Install iOS Pods
        script: |
          cd ios
          pod install
          cd ..

      # --- Code Signing Configuration for iOS and macOS ---
      # Using the updated 'app-store-connect fetch-signing-files' command
     - name: Fetch iOS and macOS signing files
        script: |
          # Debugging step: Print the variable to see its value
          echo "IOS_BUNDLE_ID from environment: ${IOS_BUNDLE_ID}"

          # Fetch iOS App Store Distribution files
          app-store-connect fetch-signing-files "${IOS_BUNDLE_ID}" \
            --type IOS_APP_STORE \
            --create
          
          # Fetch macOS App Store Distribution files
          app-store-connect fetch-signing-files "${IOS_BUNDLE_ID}" \
            --platform MAC_OS \
            --type MAC_APP_STORE \
            --create

      # Build for iOS
      - name: Build iOS App
        script: |
          # The signing is handled by the `fetch-signing-files` step,
          # and Flutter build ipa integrates with Xcode's standard signing.
          flutter build ipa --release \
            --obfuscate --split-debug-info=./debug_info \
            --bundle-id "${IOS_BUNDLE_ID}"

      # Build for macOS
      - name: Build macOS App
        script: |
          flutter build macos --release \
            --obfuscate --split-debug-info=./debug_info \
            --target-platform macos-x64 # Specify platform if needed

    # --- Artifacts Definition ---
    artifacts:
      - build/ios/Runner.ipa # The iOS App Store / TestFlight distributable
      - build/macos/Build/Products/Release/*.app.zip # The macOS app bundle, zipped for download

    # --- Publishing Section ---
    publishing:
      email:
        recipients:
          - pegumaxinc@gmail.com
        notify:
          success: true
          failure: true

      # --- Publish to App Store Connect (for iOS) ---
      app_store_connect:
        auth: integration # This tells Codemagic to use the App Store Connect API key integration
        # submit_to_testflight: true # Uncomment to submit to TestFlight automatically
        # build_number:
        #   source: codemagic
        # version_number:
        #   source: project
        # submit_to_app_store: true # Only enable after TestFlight testing is complete
        # release_type: manual # or automatic
        # NOTE: This 'app_store_connect' block is primarily for iOS IPA uploads.
        # For macOS app uploads to the Mac App Store, it's a more involved process often
        # requiring specific notarization steps and potentially a separate publishing tool or script.
        # It's highly recommended to get iOS publishing working first.
